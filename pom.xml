<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.edutech</groupId>
    <artifactId>edutech-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging> <!-- Indica que este POM es un proyecto padre para organizar módulos -->

    <name>EduTech Proyecto Padre</name>
    <description>Proyecto padre para los microservicios de la plataforma EduTech</description>

    <properties>
        <java.version>21</java.version> <!-- Versión de Java a utilizar para todos los módulos -->
        <spring-boot.version>3.3.13</spring-boot.version> <!-- Versión de Spring Boot que se aplica a todos los módulos -->
        <springdoc.version>2.5.0</springdoc.version> <!-- Versión de SpringDoc OpenAPI (para Swagger UI) -->
        <lombok.version>1.18.30</lombok.version> <!-- Versión de Lombok -->
        <mysql-connector.version>8.0.33</mysql-connector.version> <!-- Versión del conector MySQL -->
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <!-- Define las versiones de dependencias para los módulos hijos -->
    <!-- Los módulos hijos solo necesitan declarar la dependencia, no la versión -->
    <dependencyManagement>
        <dependencies>
            <!-- Importa las dependencias de Spring Boot para asegurar la consistencia de versiones -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Dependencia de SpringDoc OpenAPI para la documentación de API (Swagger UI) -->
            <!-- Si no se va a usar Swagger, esta dependencia y sus imports en OpenApiConfig.java se pueden omitir -->
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>

            <!-- Dependencia de Lombok para reducir código boilerplate (getters, setters, etc.) -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope> <!-- 'provided' indica que Lombok se usa solo en tiempo de compilación/desarrollo -->
                <optional>true</optional>
            </dependency>

            <!-- Dependencia del conector MySQL para la conexión a la base de datos -->
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${mysql-connector.version}</version>
                <scope>runtime</scope> <!-- 'runtime' indica que se necesita en tiempo de ejecución, no en compilación -->
            </dependency>

            <!-- Aquí se pueden añadir otras dependencias comunes que todos los servicios o la mayoría usarán -->

        </dependencies>
    </dependencyManagement>

    <!-- Declara los módulos (microservicios) que forman parte de este proyecto padre -->
    <!-- Deben ser los nombres exactos de las carpetas de tus microservicios -->
    <modules>
        <module>curso-servicio</module>
        <module>inscripciones-servicio</module>
        <module>login-servicio</module>
        <module>soporte-servicio</module>
        <module>usuario-servicio</module>
    </modules>

    <!-- Define la gestión de plugins para los módulos hijos -->
    <!-- Esto asegura que todos los módulos usan las mismas versiones de plugins y configuraciones -->
    <build>
        <pluginManagement>
            <plugins>
                <!-- Plugin de Spring Boot para empaquetar las aplicaciones como ejecutables JAR/WAR -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal> <!-- Crea un JAR ejecutable con dependencias anidadas -->
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <excludes>
                            <exclude>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                            </exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <!-- Plugin del compilador Maven para especificar la versión de Java -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.13.0</version> <!-- Versión del plugin, compatible con Java 21 -->
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <!-- Configuración para el procesador de anotaciones de Lombok -->
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>

                <!-- Plugin Surefire para la ejecución de pruebas unitarias -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.2.5</version> <!-- Asegura la compatibilidad con JUnit 5 -->
                    <configuration>
                        <!-- Puedes añadir configuraciones como la memoria para pruebas si es necesario -->
                        <!-- <argLine>-Xmx1024m</argLine> -->
                    </configuration>
                </plugin>

                <!-- Plugin de Maven para limpiar los directorios de compilación -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.4.1</version>
                </plugin>

                <!-- Plugin de Maven para copiar recursos -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.1</version>
                </plugin>

                <!-- Plugin de Maven para la instalación de artefactos en el repositorio local -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

</project>
